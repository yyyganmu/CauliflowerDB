{"version":3,"file":"static/js/7461.a7c6cef0.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/index.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/index.tsx","../../../packages/core/BaseFeatureWidget/util.tsx"],"sourcesContent":["import React, { lazy, useState, Suspense } from 'react'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { BaseProps } from './../types'\nimport { LoadingEllipses } from '../../ui'\n\n// icons\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazies\nconst HelpDlg = lazy(() => import('./SequenceHelpDialog'))\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeaturePanel({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n\n  return !model ? null : (\n    <div className={classes.container}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n            key={feature.uniqueId as string}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n      {helpShown ? (\n        <Suspense fallback={<div />}>\n          <HelpDlg handleClose={() => setHelpShown(false)} />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Link,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\n// locals\nimport {\n  measureText,\n  measureGridWidth,\n  getStr,\n  getEnv,\n  getSession,\n  getUriLink,\n  isUriLocation,\n  assembleLocString,\n  ParsedLocString,\n} from '../../util'\nimport { ErrorMessage, SanitizedHTML } from '../../ui'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from '../types'\nimport { SimpleFeatureSerialized } from '../../util/simpleFeature'\nimport { ellipses } from '../util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.action.disabledBackground,\n    border: `1px solid ${theme.palette.action.disabledBackground}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport function SimpleValue({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nfunction ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\nconst toLocale = (n: number) => n.toLocaleString('en-US')\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-expect-error\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleValue\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleValue key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\nexport function UriLink({\n  value,\n}: {\n  value: { uri: string; baseUri?: string }\n}) {\n  const href = getUriLink(value)\n  return <SanitizedHTML html={`<a href=\"${href}\">${href}</a>`} />\n}\n\nfunction DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>[]\n}) {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      } as { [key: string]: unknown }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return isUriLocation(value) ? <UriLink value={value} /> : getStr(value)\n      },\n      width: measureGridWidth(rows.map(r => r[val])),\n    }))\n\n    const rowHeight = 25\n    const hideFoot = rows.length < 100\n    const headHeight = 80\n    const height =\n      Math.min(rows.length, 100) * rowHeight + headHeight + (hideFoot ? 0 : 50)\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height,\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableRowSelectionOnClick\n            rowHeight={rowHeight}\n            rows={rows}\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={hideFoot}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// pick using a path from an object, similar to _.get from lodash with special logic\n// for Descriptions from e.g. VCF headers\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: unknown[][], prefix: any) {\n  const arr = [] as number[]\n  array.forEach(key => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nfunction UriAttribute({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n\nexport function Attributes(props: {\n  attributes: Record<string, any>\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleValue\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nfunction generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{ ...mate, uniqueId: uniqueId + '-mate' }}\n          />\n        </>\n      ) : null}\n      <Divider />\n\n      <Typography>Attributes</Typography>\n\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary\n        FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n      >\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{ ...sub, uniqueId: `${uniqueId}_${idx}` }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nexport default observer(function ({ model }: BaseInputProps) {\n  const { error, featureData } = model\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  }\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const g = JSON.parse(\n    JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)),\n  )\n  return isEmpty(g) ? null : <FeatureDetails model={model} feature={g} />\n})\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// calculates UTRs using impliedUTRs logic\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n"],"names":["HelpDlg","lazy","SequenceFeatureDetails","useStyles","makeStyles","theme","formControl","margin","container","marginTop","spacing","marginBottom","SequenceFeaturePanel","_ref","model","feature","classes","_useState","useState","_useState2","_slicedToArray","shown","setShown","_useState3","_useState4","helpShown","setHelpShown","_jsxs","className","children","_jsx","Button","variant","onClick","FormControl","IconButton","HelpIcon","Suspense","fallback","LoadingEllipses","uniqueId","handleClose","MAX_FIELD_NAME_WIDTH","globalOmit","coreDetails","_theme$palette$tertia","expansionPanelDetails","display","padding","expandIcon","color","palette","tertiary","contrastText","field","flexWrap","fieldDescription","background","mode","fieldName","wordBreak","minWidth","borderBottom","fontSize","action","disabledBackground","marginRight","fieldValue","maxHeight","overflow","fieldSubvalue","border","concat","boxSizing","BaseCard","title","_ref$defaultExpanded","defaultExpanded","expanded","setExpanded","Accordion","onChange","s","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","Typography","AccordionDetails","FieldName","_ref2","description","name","width","_ref2$prefix","prefix","_useStyles2","cx","val","_toConsumableArray","join","Tooltip","placement","style","BasicValue","_ref3","value","isLink","match","React","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","SimpleValue","_ref4","undefined","ArrayValue","_ref5","_ref5$prefix","length","Attributes","attributes","every","_Fragment","map","i","toLocale","n","toLocaleString","Position","props","strand","strandMap","str","loc","assembleLocString","CoreDetails","obj","formattedFeat","_objectSpread","__jbrowsefmt","start","end","displayedDetails","Object","entries","type","_ref6","_ref7","key","filter","_ref8","_ref10","_ref11","BaseCoreDetails","UriLink","_ref12","getUriLink","DataGridDetails","_ref13","_step","keys","sort","unionKeys","Set","_iterator","_createForOfIteratorHelper","done","_i","_Object$keys","k","add","err","e","f","size","colNames","rows","_ref14","_ref15","id","rest","_objectWithoutProperties","_excluded","identifier","has","delete","columns","renderCell","params","isUriLocation","getStr","measureGridWidth","r","hideFoot","height","Math","min","DataGrid","disableRowSelectionOnClick","rowHeight","hideFooterSelectedRowCount","hideFooter","UriAttribute","_ref16","uri","_value$baseUri","baseUri","URL","_props$omit","omit","_props$omitSingleLeve","omitSingleLevel","descriptions","_props$formatter","formatter","hideUris","_props$prefix","omits","_excluded2","formattedAttributes","maxLabelWidth","array","arr","forEach","push","measureText","ceil","max","apply","generateMaxWidth","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_obj","arguments","elt","Description","accessNested","Array","isArray","_excluded3","_createElement","BaseAttributes","generateTitle","ellipses","FeatureDetails","_props$omit2","_props$depth","depth","mate","_feature$name","_feature$id","_feature$type","subfeatures","pm","getEnv","pluginManager","session","getSession","ExtraPanel","evaluateExtensionPoint","Divider","ErrorBoundary","FallbackComponent","_ref23","error","ErrorMessage","Component","sub","idx","observer","_ref24","featureData","g","parse","_","v","stitch","subfeats","sequence","slice","getItemId","feat","dedupe","list","item","pos","ary","revlist","seqlen","a","b","calculateUTRs","cds","exons","firstCds","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","threeUTRs","calculateUTRs2","parentFeat","slug"],"sourceRoot":""}