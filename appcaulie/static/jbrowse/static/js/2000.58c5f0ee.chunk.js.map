{"version":3,"file":"static/js/2000.58c5f0ee.chunk.js","mappings":"2NAUA,SAASA,EAASC,GAAiC,IAA9BC,EAAKD,EAALC,MACnBC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAUC,OAAOZ,GACvB,OAAIW,EAAQE,OAAS,KAEjBC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLC,QAAS,WACPC,IAAKT,GACLD,GAAU,GACVW,YAAW,WACTX,GAAU,EACZ,GAAG,IACL,EAAEM,SAEDP,EAAS,sBAAwB,UAEpCQ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QAAS,kBAAMb,GAAQ,SAAAgB,GAAG,OAAKA,CAAG,GAAC,EAACN,SACvDX,EAAO,YAAc,eAExBY,EAAAA,EAAAA,KAAA,OAAAD,SAAMX,EAAOM,EAAO,GAAAY,OAAMZ,EAAQa,MAAM,EAAG,KAAI,aAI9CP,EAAAA,EAAAA,KAAA,OAAAD,SAAML,GACf,CAEA,SAASc,EAAqBC,GAC5B,OACET,EAAAA,EAAAA,KAACU,EAAAA,gBAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTF,GAAK,IACTG,UAAW,SAAC7B,GAAc,OAAKiB,EAAAA,EAAAA,KAACnB,EAAS,CAACE,MAAOA,GAAS,IAGhE,CAEA,IAAM8B,GAAoCC,EAAAA,EAAAA,WAExC,SAAAC,GAAgC,IAA7BC,EAAKD,EAALC,MACDC,EAA+BC,KAAKC,MAAMD,KAAKE,UAAUJ,EAAMK,cAAvDC,EAAQL,EAARK,SAAUC,EAAQN,EAARM,SAClB,OACE1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAK,CAAC,cAAY,wBAAuBzB,SAAA,EACxCC,EAAAA,EAAAA,KAACyB,EAAAA,gBAAe,CAACC,MAAM,YAAYC,QAASL,KAC5CtB,EAAAA,EAAAA,KAACyB,EAAAA,gBAAe,CAACC,MAAM,YAAYC,QAASJ,KAC5CvB,EAAAA,EAAAA,KAACQ,EAAoB,CAACmB,QAASL,KAC/BtB,EAAAA,EAAAA,KAACQ,EAAoB,CAACmB,QAASJ,MAGrC,IAGF,W","sources":["../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/SyntenyFeatureDetail.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport copy from 'copy-to-clipboard'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport {\n  BaseCoreDetails,\n  BaseAttributes,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { SimpleFeatureSerialized } from '@jbrowse/core/util/simpleFeature'\n\nfunction Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const display = String(value)\n  if (display.length > 100) {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={() => {\n            copy(display)\n            setCopied(true)\n            setTimeout(() => {\n              setCopied(false)\n            }, 700)\n          }}\n        >\n          {copied ? 'Copied to clipboard' : 'Copy'}\n        </button>\n        <button type=\"button\" onClick={() => setShow(val => !val)}>\n          {show ? 'Show less' : 'Show more'}\n        </button>\n        <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n      </>\n    )\n  }\n  return <div>{display}</div>\n}\n\nfunction CustomFeatureDetails(props: { feature: SimpleFeatureSerialized }) {\n  return (\n    <BaseAttributes\n      {...props}\n      formatter={(value: unknown) => <Formatter value={value} />}\n    />\n  )\n}\n\nconst BreakpointAlignmentsFeatureDetail = observer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ({ model }: { model: any }) => {\n    const { feature1, feature2 } = JSON.parse(JSON.stringify(model.featureData))\n    return (\n      <Paper data-testid=\"alignment-side-drawer\">\n        <BaseCoreDetails title=\"Feature 1\" feature={feature1} />\n        <BaseCoreDetails title=\"Feature 2\" feature={feature2} />\n        <CustomFeatureDetails feature={feature1} />\n        <CustomFeatureDetails feature={feature2} />\n      </Paper>\n    )\n  },\n)\n\nexport default BreakpointAlignmentsFeatureDetail\n"],"names":["Formatter","_ref","value","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","copied","setCopied","display","String","length","_jsxs","_Fragment","children","_jsx","type","onClick","copy","setTimeout","val","concat","slice","CustomFeatureDetails","props","BaseAttributes","_objectSpread","formatter","BreakpointAlignmentsFeatureDetail","observer","_ref2","model","_JSON$parse","JSON","parse","stringify","featureData","feature1","feature2","Paper","BaseCoreDetails","title","feature"],"sourceRoot":""}