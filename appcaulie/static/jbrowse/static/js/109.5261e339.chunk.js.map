{"version":3,"file":"static/js/109.5261e339.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotWarnings.tsx","../../../plugins/dotplot-view/src/DotplotView/components/PanButtons.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../node_modules/@mui/icons-material/ArrowDropUp.js","../../../node_modules/@mui/icons-material/ArrowLeft.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button } from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nexport default observer(function ({ model }: { model: DotplotViewModel }) {\n  const trackWarnings = model.tracks.filter(t => t.displays[0].warnings?.length)\n  const [shown, setShown] = useState(false)\n  return trackWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          trackWarnings={trackWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n","import React from 'react'\nimport { IconButton, Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport ArrowDropUp from '@mui/icons-material/ArrowDropUp'\nimport ArrowLeft from '@mui/icons-material/ArrowLeft'\nimport ArrowRight from '@mui/icons-material/ArrowRight'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  dpad: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    margin: 0,\n    position: 'absolute',\n    right: 50,\n    zIndex: 1000,\n    top: 50,\n  },\n  icon: {\n    padding: 0,\n    margin: 0,\n  },\n})\n\nexport default observer(function PanButtons({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.dpad} elevation={6}>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(100)}\n      >\n        <ArrowDropUp />\n      </IconButton>\n      <div />\n\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(-100)}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(100)}\n      >\n        <ArrowRight />\n      </IconButton>\n\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(-100)}\n      >\n        <ArrowDropDown />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomIn()\n          model.vview.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomOut()\n          model.vview.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n    </Paper>\n  )\n})\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport DotplotWarnings from './DotplotWarnings'\nimport PanButtons from './PanButtons'\n\nconst useStyles = makeStyles()({\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n    position: 'relative',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  return (\n    <div>\n      <IconButton onClick={model.zoomOutButton} className={classes.iconButton}>\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton onClick={model.zoomInButton} className={classes.iconButton}>\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={() => model.activateTrackSelector()}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n      >\n        <MoreVert />\n      </IconButton>\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.squareView(),\n              label: 'Square view - same base pairs per pixel',\n            },\n            {\n              onClick: () => model.squareViewProportional(),\n              label: 'Rectanglularize view - same total bp',\n            },\n            {\n              onClick: () => model.showAllRegions(),\n              label: 'Show all regions',\n            },\n            {\n              onClick: () => model.setDrawCigar(!model.drawCigar),\n              type: 'checkbox',\n              label: 'Draw CIGAR',\n              checked: model.drawCigar,\n            },\n            {\n              onClick: () => model.setShowPanButtons(!model.showPanButtons),\n              label: 'Show pan buttons',\n              type: 'checkbox',\n              checked: model.showPanButtons,\n            },\n            {\n              label: 'Click and drag mode',\n              subMenu: [\n                {\n                  onClick: () => model.setCursorMode('move'),\n                  label: 'Pan by default, select region when ctrl key is held',\n                  icon: CursorMove,\n                  type: 'radio',\n                  checked: model.cursorMode === 'move',\n                },\n                {\n                  onClick: () => model.setCursorMode('crosshair'),\n                  label: 'Select region by default, pan when ctrl key is held',\n                  icon: CursorMouse,\n                  type: 'radio',\n                  checked: model.cursorMode === 'crosshair',\n                },\n              ],\n            },\n            {\n              label: 'Wheel scroll mode',\n              subMenu: [\n                {\n                  onClick: () => model.setWheelMode('pan'),\n                  label: 'Pans view',\n                  type: 'radio',\n                  checked: model.wheelMode === 'pan',\n                },\n                {\n                  onClick: () => model.setWheelMode('zoom'),\n                  label: 'Zooms view',\n                  type: 'radio',\n                  checked: model.wheelMode === 'zoom',\n                },\n                {\n                  onClick: () => model.setWheelMode('none'),\n                  label: 'Disable',\n                  type: 'radio',\n                  checked: model.wheelMode === 'none',\n                },\n              ],\n            },\n          ]}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default observer(function Header({\n  model,\n  selection,\n}: {\n  model: DotplotViewModel\n  selection?: { width: number; height: number }\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, showPanButtons } = model\n  return (\n    <div className={classes.headerBar}>\n      <DotplotControls model={model} />\n      <Typography className={classes.bp} variant=\"body2\" color=\"textSecondary\">\n        x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n        <br />\n        y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n      </Typography>\n      {selection ? (\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n          {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n        </Typography>\n      ) : null}\n      <div className={classes.spacer} />\n      <DotplotWarnings model={model} />\n      {showPanButtons ? <PanButtons model={model} /> : null}\n    </div>\n  )\n})\n","import React, { useMemo, useRef, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\nimport { Portal, alpha } from '@mui/material'\nimport { usePopper } from 'react-popper'\n\nexport function round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  mouserectClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  mouserectClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = offset + (mouserectClient?.[0] || 0) - (xdistance < 0 ? w : 0)\n        const y = offset + (mouserectClient?.[1] || 0) - (ydistance < 0 ? w : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mouserectClient, xdistance, ydistance, w],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'left' : 'right',\n  })\n  return (\n    <>\n      {mouserect ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mouserect[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  mousedownClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  mousedownClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = (mousedownClient?.[0] || 0) - (xdistance < 0 ? 0 : 0)\n        const y = (mousedownClient?.[1] || 0) - (ydistance < 0 ? 0 : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mousedownClient, xdistance, ydistance],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'right' : 'left',\n  })\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mousedown[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Rect = { left: number; top: number }\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const [ctrlKeyWasUsed, setCtrlKeyWasUsed] = useState(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const rootRect = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserectClient = mouseupClient || mousecurrClient\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview, wheelMode, cursorMode } = model\n\n  const validPan =\n    (cursorMode === 'move' && !ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && ctrlKeyWasUsed)\n\n  const validSelect =\n    (cursorMode === 'move' && ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && !ctrlKeyWasUsed)\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            if (wheelMode === 'pan') {\n              hview.scroll(distanceX.current / 3)\n              vview.scroll(distanceY.current / 10)\n            } else if (wheelMode === 'zoom') {\n              if (\n                Math.abs(distanceY.current) > Math.abs(distanceX.current) * 2 &&\n                mousecurr\n              ) {\n                const val = distanceY.current < 0 ? 1.1 : 0.9\n                hview.zoomTo(hview.bpPerPx * val, mousecurr[0])\n                vview.zoomTo(\n                  vview.bpPerPx * val,\n                  rootRect.height - mousecurr[1],\n                )\n              }\n            }\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview, wheelMode, mousecurr, rootRect.height])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && validPan && !mouseupClient) {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [\n    validPan,\n    mousecurrClient,\n    mousedownClient,\n    cursorMode,\n    ctrlKeyWasUsed,\n    mouseupClient,\n    hview,\n    vview,\n  ])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    function globalMouseUp(event: MouseEvent) {\n      if (Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 && validSelect) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      return () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return () => {}\n  }, [\n    validSelect,\n    mousedown,\n    mousecurr,\n    mouseup,\n    xdistance,\n    ydistance,\n    ctrlKeyWasUsed,\n    cursorMode,\n  ])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          !validSelect || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div className={classes.container}>\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && validSelect ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                mouserectClient={mouserectClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {validSelect ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                mousedownClient={mousedownClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: ctrlKeyWasUsed ? 'pointer' : cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                  setCtrlKeyWasUsed(event.ctrlKey)\n                }\n              }}\n            >\n              <Grid model={model}>\n                {validSelect && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 50,\n                    left: mouseupClient[0] + 50,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          className={classes.resizeHandle}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 7-5 5 5 5V7z\"\n}), 'ArrowLeft');\nexports.default = _default;"],"names":["getAdapter","_ref","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","type","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","observer","_ref2","sessionTrackData","setSessionTrackData","_useState","useState","_useState2","_slicedToArray","setBed2Location","_useState3","_useState4","setBed1Location","_useState5","_useState6","setFileLocation","_useState7","_useState8","value","setValue","_useState9","_useState10","error","setError","fileName","uri","localPath","name","undefined","getName","path","endsWith","slice","stripGz","useEffect","fn","trackId","concat","Date","now","adapter","e","console","_jsxs","Paper","style","padding","children","_jsx","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","_filteredTracks$","model","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","_toConsumableArray","filter","t","track","readConfObject","includes","f","resetTrack","paragraph","TrackSelectorIcon","length","Select","map","MenuItem","getTrackName","useStyles","makeStyles","theme","importFormContainer","spacing","assemblySelector","width","TrackSelector","choice","setChoice","_Fragment","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","classes","setAssembly2","setAssembly1","_useState11","_useState12","showTrackId","displayError","Container","className","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","bpPerPx","offsetPx","setAssemblyNames","variant","color","CursorMove","props","SvgIcon","_objectSpread","fill","d","CursorMouse","WarningDialog","lazy","trackWarnings","_t$displays$0$warning","displays","warnings","shown","setShown","Alert","severity","handleClose","dpad","gridTemplateColumns","position","right","zIndex","top","icon","elevation","IconButton","vview","scroll","ArrowDropUp","hview","ArrowLeft","ArrowRight","ArrowDropDown","zoomIn","ZoomIn","zoomOut","ZoomOut","iconButton","bp","marginLeft","spacer","flexGrow","headerBar","DotplotControls","menuAnchorEl","setMenuAnchorEl","zoomOutButton","zoomInButton","activateTrackSelector","title","currentTarget","MoreVert","Menu","anchorEl","open","onMenuItemClick","_event","callback","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setShowPanButtons","showPanButtons","subMenu","setCursorMode","cursorMode","setWheelMode","wheelMode","onClose","selection","join","getBpDisplayStr","currBp","height","DotplotWarnings","PanButtons","tooltip","pointerEvents","backgroundColor","alpha","palette","grey","borderRadius","shape","common","white","fontFamily","typography","fontSize","pxToRem","lineHeight","Math","round","maxWidth","wordWrap","blank","left","TooltipWhereMouseovered","_ref$current","mouserect","mouserectClient","xdistance","ydistance","viewHeight","setAnchorEl","rect","useRef","current","getBoundingClientRect","w","offset","virtElement","useMemo","x","y","bottom","toJSON","_usePopper","usePopper","placement","styles","attributes","Portal","ref","popper","locstr","TooltipWhereClicked","mousedown","mousedownClient","_usePopper2","abs","gridColumn","gridRow","root","marginBottom","overflow","overlay","cursor","content","resizeHandle","background","boxSizing","borderTop","getOffset","coord","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","_ref$current2","mousecurrClient","setMouseCurrClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","ctrlKeyWasUsed","setCtrlKeyWasUsed","svg","rootRect","mousecurr","mouseup","validPan","validSelect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","zoomTo","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","globalMouseUp","Header","onMouseLeave","onMouseEnter","VerticalAxis","HorizontalAxis","onMouseDown","button","ctrlKey","min","Boolean","_","anchorReference","anchorPosition","onDotplotView","ResizeHandle","onDrag","n","setHeight","_ref3","initialized","loading","ImportForm","LoadingEllipses","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}