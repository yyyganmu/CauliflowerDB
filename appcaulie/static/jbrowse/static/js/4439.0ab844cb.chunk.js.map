{"version":3,"file":"static/js/4439.0ab844cb.chunk.js","mappings":"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","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/GetSequenceDialog.tsx","../../../packages/core/util/formatFastaStrings.ts","../../../node_modules/@mui/icons-material/GetApp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Container,\n  DialogActions,\n  DialogContent,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { saveAs } from 'file-saver'\nimport { getConf } from '@jbrowse/core/configuration'\nimport copy from 'copy-to-clipboard'\nimport { Dialog } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  reverse,\n  complement,\n  Feature,\n  Region,\n} from '@jbrowse/core/util'\nimport { formatSeqFasta } from '@jbrowse/core/util/formatFastaStrings'\n\n// icons\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()({\n  dialogContent: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * Fetches and returns a list features for a given list of regions\n */\nasync function fetchSequence(\n  model: LGV,\n  regions: Region[],\n  signal?: AbortSignal,\n) {\n  const session = getSession(model)\n  const { leftOffset, rightOffset } = model\n\n  if (!leftOffset || !rightOffset) {\n    throw new Error('no offsets on model to use for range')\n  }\n\n  if (leftOffset.assemblyName !== rightOffset.assemblyName) {\n    throw new Error('not able to fetch sequences from multiple assemblies')\n  }\n  const { rpcManager, assemblyManager } = session\n  const assemblyName = leftOffset.assemblyName || rightOffset.assemblyName || ''\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  const adapterConfig = getConf(assembly, ['sequence', 'adapter'])\n\n  const sessionId = 'getSequence'\n  return rpcManager.call(sessionId, 'CoreGetFeatures', {\n    adapterConfig,\n    regions,\n    sessionId,\n    signal,\n  }) as Promise<Feature[]>\n}\n\nfunction SequenceDialog({\n  model,\n  handleClose,\n}: {\n  model: LGV\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [error, setError] = useState<unknown>()\n  const [sequenceChunks, setSequenceChunks] = useState<Feature[]>()\n  const [rev, setReverse] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const [comp, setComplement] = useState(false)\n  const { leftOffset, rightOffset } = model\n  const loading = Boolean(sequenceChunks === undefined)\n\n  useEffect(() => {\n    let active = true\n    const controller = new AbortController()\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        // random note: the current selected region can't be a computed because\n        // it uses action on base1dview even though it's on the ephemeral\n        // base1dview\n        const selection = model.getSelectedRegions(leftOffset, rightOffset)\n        if (selection.length === 0) {\n          throw new Error('Selected region is out of bounds')\n        }\n        const chunks = await fetchSequence(model, selection, controller.signal)\n        if (active) {\n          setSequenceChunks(chunks)\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      controller.abort()\n      active = false\n    }\n  }, [model, session, leftOffset, rightOffset])\n\n  const sequence = sequenceChunks\n    ? formatSeqFasta(\n        sequenceChunks\n          .filter(f => !!f)\n          .map(chunk => {\n            let chunkSeq = chunk.get('seq')\n            const chunkRefName = chunk.get('refName')\n            const chunkStart = chunk.get('start') + 1\n            const chunkEnd = chunk.get('end')\n            const loc = `${chunkRefName}:${chunkStart}-${chunkEnd}`\n            if (chunkSeq?.length !== chunkEnd - chunkStart + 1) {\n              throw new Error(\n                `${loc} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(\n                  chunkEnd - chunkStart\n                ).toLocaleString()}`,\n              )\n            }\n\n            if (rev) {\n              chunkSeq = reverse(chunkSeq)\n            }\n            if (comp) {\n              chunkSeq = complement(chunkSeq)\n            }\n            return {\n              header: loc + (rev ? '-rev' : '') + (comp ? '-comp' : ''),\n              seq: chunkSeq,\n            }\n          }),\n      )\n    : ''\n\n  const sequenceTooLarge = sequence ? sequence.length > 1_000_000 : false\n\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => {\n        handleClose()\n        model.setOffsets()\n      }}\n      title=\"Reference sequence\"\n    >\n      <DialogContent>\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : loading ? (\n          <Container>\n            Retrieving reference sequence...\n            <CircularProgress\n              style={{ marginLeft: 10 }}\n              size={20}\n              disableShrink\n            />\n          </Container>\n        ) : null}\n        <TextField\n          data-testid=\"rubberband-sequence\"\n          variant=\"outlined\"\n          multiline\n          minRows={5}\n          maxRows={10}\n          disabled={sequenceTooLarge}\n          className={classes.dialogContent}\n          fullWidth\n          value={\n            sequenceTooLarge\n              ? 'Reference sequence too large to display, use the download FASTA button'\n              : sequence\n          }\n          InputProps={{\n            readOnly: true,\n            classes: {\n              input: classes.textAreaFont,\n            },\n          }}\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={rev}\n                onChange={event => setReverse(event.target.checked)}\n              />\n            }\n            label=\"Reverse sequence\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={comp}\n                onChange={event => setComplement(event.target.checked)}\n              />\n            }\n            label=\"Complement sequence\"\n          />\n        </FormGroup>\n        <Typography style={{ margin: 10 }}>\n          Note: Check both boxes for the \"reverse complement\"\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            copy(sequence)\n            setCopied(true)\n            setTimeout(() => setCopied(false), 500)\n          }}\n          disabled={loading || !!error || sequenceTooLarge}\n          color=\"primary\"\n          startIcon={<ContentCopyIcon />}\n        >\n          {copied ? 'Copied' : 'Copy to clipboard'}\n        </Button>\n        <Button\n          onClick={() => {\n            saveAs(\n              new Blob([sequence || ''], {\n                type: 'text/x-fasta;charset=utf-8',\n              }),\n              'jbrowse_ref_seq.fa',\n            )\n          }}\n          disabled={loading || !!error}\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n        >\n          Download FASTA\n        </Button>\n        <Button onClick={handleClose} variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(SequenceDialog)\n","export interface SeqChunk {\n  header: string\n  seq: string\n}\n/**\n * Returns sequence with new line every 80 characters\n * ref https://stackoverflow.com/a/51506718/2129219\n *\n * @param seqString -  string\n * @returns formatted sequence string\n */\nexport function formatFastaLines(seqString: string) {\n  return seqString.replace(/(.{1,80})/g, '$1\\n').trimEnd()\n}\n/**\n * Formats the sequences chunks into Fasta format\n *\n * @param chunks - array of seq chunks of the form `{ header: string, seq: string }`\n * @returns formatted sequence in fasta format\n */\nexport function formatSeqFasta(chunks: SeqChunk[]) {\n  return chunks\n    .map(chunk => `>${chunk.header}\\n${formatFastaLines(chunk.seq)}`)\n    .join('\\n')\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\nexports.default = _default;"],"names":["useStyles","makeStyles","dialogContent","width","textAreaFont","fontFamily","fetchSequence","_x","_x2","_x3","_fetchSequence","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","model","regions","signal","session","leftOffset","rightOffset","rpcManager","assemblyManager","assemblyName","assembly","adapterConfig","sessionId","wrap","_context2","prev","next","getSession","Error","get","concat","getConf","abrupt","call","stop","observer","_ref","handleClose","classes","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","sequenceChunks","setSequenceChunks","_useState5","_useState6","rev","setReverse","_useState7","_useState8","copied","setCopied","_useState9","_useState10","comp","setComplement","loading","Boolean","undefined","useEffect","active","controller","AbortController","_callee","selection","chunks","_context","getSelectedRegions","length","sent","t0","console","abort","sequence","filter","f","map","chunk","_chunkSeq","chunkSeq","chunkRefName","chunkStart","chunkEnd","loc","toLocaleString","reverse","complement","header","seq","replace","trimEnd","join","sequenceTooLarge","_jsxs","Dialog","maxWidth","open","onClose","setOffsets","title","children","DialogContent","_jsx","Typography","color","Container","CircularProgress","style","marginLeft","size","disableShrink","TextField","variant","multiline","minRows","maxRows","disabled","className","fullWidth","value","InputProps","readOnly","input","FormGroup","FormControlLabel","control","Checkbox","onChange","event","target","checked","label","margin","DialogActions","Button","onClick","copy","setTimeout","startIcon","ContentCopyIcon","saveAs","Blob","type","GetAppIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}