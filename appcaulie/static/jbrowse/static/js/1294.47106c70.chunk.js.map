{"version":3,"file":"static/js/1294.47106c70.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ResizeBar.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantSampleGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/AnnotGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantCsqPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantAnnPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendOptionDialog.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantFeatureWidget.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.action.disabled,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onDrag: (arg: number, idx: number) => void\n}) {\n  const { classes } = useStyles()\n  const cb = useCallback(\n    (d: number) => {\n      onDrag(d, idx)\n    },\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={cb}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  let init = checkbox ? 52 : 0\n  for (let i = 0; i < widths.length; i++) {\n    const width = widths[i]\n    offsets[i] = width + init\n    init += width\n  }\n\n  const onDrag = useCallback(\n    (distance: number, idx: number) => {\n      const newWidths = [...widths]\n      // mui doesn't allow columns smaller than 50\n      newWidths[idx] = Math.max(newWidths[idx] + distance, 50)\n      setWidths(newWidths)\n    },\n    [widths, setWidths],\n  )\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={onDrag}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport {\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { measureGridWidth, SimpleFeatureSerialized } from '@jbrowse/core/util'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\n\ninterface Entry {\n  sample: string\n  id: string\n  [key: string]: string\n}\n\ntype InfoFields = Record<string, unknown>\ntype Filters = Record<string, string>\n\nfunction SampleFilters({\n  columns,\n  filter,\n  setFilter,\n}: {\n  columns: { field: string }[]\n  filter: Filters\n  setFilter: (arg: Filters) => void\n}) {\n  return (\n    <>\n      <Typography>\n        These filters can use a plain text search or regex style query, e.g. in\n        the genotype field, entering 1 will query for all genotypes that include\n        the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find\n        any non-zero allele e.g. 0|2 or 2/33\n      </Typography>\n      {columns.map(({ field }) => (\n        <TextField\n          key={`filter-${field}`}\n          placeholder={`Filter ${field}`}\n          value={filter[field] || ''}\n          onChange={event =>\n            setFilter({ ...filter, [field]: event.target.value })\n          }\n        />\n      ))}\n    </>\n  )\n}\n\nexport default function VariantSamples(props: {\n  feature: SimpleFeatureSerialized\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  descriptions: any\n}) {\n  const { feature, descriptions = {} } = props\n  const { ref, scrollLeft } = useResizeBar()\n  const [filter, setFilter] = useState<Filters>({})\n  const samples = (feature.samples || {}) as Record<string, InfoFields>\n  const preFilteredRows = Object.entries(samples)\n\n  let error\n  let rows = [] as Entry[]\n  const filters = Object.keys(filter)\n\n  // catch some error thrown from regex\n  // note: maps all values into a string, if this is not done rows are not\n  // sortable by the data-grid\n  try {\n    rows = preFilteredRows\n      .map(row => {\n        return {\n          ...Object.fromEntries(\n            Object.entries(row[1]).map(e => [e[0], `${e[1]}`]),\n          ),\n          sample: row[0],\n          id: row[0],\n        } as Entry\n      })\n      .filter(row =>\n        filters.length\n          ? filters.every(key => {\n              const currFilter = filter[key]\n              return currFilter\n                ? row[key].match(new RegExp(currFilter, 'i'))\n                : true\n            })\n          : true,\n      )\n  } catch (e) {\n    error = e\n  }\n\n  const keys = ['sample', ...Object.keys(preFilteredRows[0]?.[1] || {})]\n  const [checked, setChecked] = useState(false)\n  const [widths, setWidths] = useState(\n    keys.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n  const columns = keys.map((field, index) => ({\n    field,\n    description: descriptions.FORMAT?.[field]?.Description,\n    width: widths[index],\n  }))\n\n  // disableRowSelectionOnClick helps avoid\n  // https://github.com/mui-org/material-ui-x/issues/1197\n  return !preFilteredRows.length ? null : (\n    <BaseCard {...props} title=\"Samples\">\n      {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => setChecked(event.target.checked)}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n      {checked ? (\n        <SampleFilters\n          setFilter={setFilter}\n          columns={columns}\n          filter={filter}\n        />\n      ) : null}\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <DataGrid\n          rows={rows}\n          hideFooter={rows.length < 100}\n          columns={columns}\n          disableRowSelectionOnClick\n          rowHeight={25}\n          columnHeaderHeight={35}\n          disableColumnMenu\n          slots={{ toolbar: checked ? GridToolbar : null }}\n          slotProps={{\n            toolbar: { printOptions: { disableToolbarButton: true } },\n          }}\n        />\n      </div>\n    </BaseCard>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  DataGrid,\n  GridColDef,\n  GridToolbar,\n  GridValidRowModel,\n} from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\n\nexport default function VariantAnnotPanel({\n  rows,\n  columns,\n}: {\n  rows: GridValidRowModel[]\n  columns: GridColDef[]\n}) {\n  const rowHeight = 25\n  const headerHeight = 100\n  const footerHeight = 50\n  const [checked, setChecked] = useState(false)\n  const height =\n    Math.min(rows.length, 100) * rowHeight +\n    headerHeight +\n    (checked ? 50 : 0) +\n    footerHeight\n  return rows.length ? (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => setChecked(event.target.checked)}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n      <div\n        style={{\n          height,\n          width: '100%',\n        }}\n      >\n        <DataGrid\n          rowHeight={rowHeight}\n          rows={rows}\n          columns={columns}\n          slots={{ toolbar: checked ? GridToolbar : null }}\n        />\n      </div>\n    </div>\n  ) : null\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport AnnotGrid from './AnnotGrid'\n\nexport default function VariantCsqPanel({\n  feature,\n  descriptions,\n}: {\n  feature: any\n  descriptions: any\n}) {\n  const csqFields = (descriptions?.INFO?.CSQ?.Description?.match(\n    /.*Format: (.*)/,\n  )?.[1].split('|') || []) as string[]\n\n  const csq = (feature.INFO.CSQ || []) as string[]\n  const rows =\n    csq.map((elt, id) => ({\n      id,\n      ...Object.fromEntries(elt.split('|').map((e, i) => [csqFields[i], e])),\n    })) || []\n  const columns = csqFields.map(c => ({\n    field: c,\n  }))\n  return csq.length ? (\n    <BaseCard title=\"CSQ table\">\n      <AnnotGrid rows={rows} columns={columns} />\n    </BaseCard>\n  ) : null\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport AnnotGrid from './AnnotGrid'\n\nexport default function VariantAnnPanel({\n  feature,\n  descriptions,\n}: {\n  feature: any\n  descriptions: any\n}) {\n  const annFields = (descriptions?.INFO?.ANN?.Description?.match(\n    /.*Functional annotations:'(.*)'$/,\n  )?.[1].split('|') || []) as string[]\n  const ann = (feature.INFO.ANN || []) as string[]\n\n  const rows =\n    ann.map((elt, id) => ({\n      id,\n      ...Object.fromEntries(elt.split('|').map((e, i) => [annFields[i], e])),\n    })) || []\n  const columns = annFields.map(c => ({\n    field: c,\n  }))\n  return ann.length ? (\n    <BaseCard title=\"ANN table\">\n      <AnnotGrid rows={rows} columns={columns} />\n    </BaseCard>\n  ) : null\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSnapshot } from 'mobx-state-tree'\n// jbrowse\nimport { Dialog } from '@jbrowse/core/ui'\nimport { getSession, Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\nexport default observer(function BreakendOptionDialog({\n  model,\n  handleClose,\n  feature,\n  viewType,\n}: {\n  model: any\n  handleClose: () => void\n  feature: Feature\n  viewType: any\n}) {\n  const { classes } = useStyles()\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirrorTracks, setMirrorTracks] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Breakpoint split view options\">\n      <DialogContent>\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={copyTracks}\n              onChange={event => setCopyTracks(event.target.checked)}\n            />\n          }\n          label=\"Copy tracks into the new view\"\n        />\n\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={mirrorTracks}\n              onChange={event => setMirrorTracks(event.target.checked)}\n            />\n          }\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n            try {\n              const viewSnapshot = viewType.snapshotFromBreakendFeature(\n                feature,\n                view,\n              )\n\n              interface Track {\n                trackId: string\n                [key: string]: unknown\n              }\n              function remapIds(arr: Track[]) {\n                return arr.map(v => ({\n                  ...v,\n                  id: `${v.trackId}-${Math.random()}`,\n                }))\n              }\n              viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n              viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n              viewSnapshot.featureData = feature\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n              const viewTracks = getSnapshot(view.tracks) as Track[]\n              viewSnapshot.views[0].tracks = remapIds(viewTracks)\n              viewSnapshot.views[1].tracks = remapIds(\n                mirrorTracks ? [...viewTracks].reverse() : viewTracks,\n              )\n\n              session.addView('BreakpointSplitView', viewSnapshot)\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { Link, Typography } from '@mui/material'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport BreakendOptionDialog from './BreakendOptionDialog'\n\nexport default function BreakendPanel(props: {\n  locStrings: string[]\n  model: any\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const [breakpointDialog, setBreakpointDialog] = useState(false)\n  let viewType\n\n  try {\n    viewType = pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  const simpleFeature = new SimpleFeature(feature)\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <Typography>Link to linear view of breakend endpoints</Typography>\n      <ul>\n        {locStrings.map(locString => (\n          <li key={`${JSON.stringify(locString)}`}>\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                const { view } = model\n                try {\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    throw new Error(\n                      'No view associated with this feature detail panel anymore',\n                    )\n                  }\n                } catch (e) {\n                  console.error(e)\n                  session.notify(`${e}`)\n                }\n              }}\n            >\n              {`LGV - ${locString}`}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {viewType ? (\n        <div>\n          <Typography>\n            Launch split views with breakend source and target\n          </Typography>\n          <ul>\n            {locStrings.map(locString => (\n              <li key={`${JSON.stringify(locString)}`}>\n                <Link\n                  href=\"#\"\n                  onClick={event => {\n                    event.preventDefault()\n                    setBreakpointDialog(true)\n                  }}\n                >\n                  {`${feature.refName}:${feature.start} // ${locString} (split view)`}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {breakpointDialog ? (\n            <BreakendOptionDialog\n              model={model}\n              feature={simpleFeature}\n              viewType={viewType}\n              handleClose={() => {\n                setBreakpointDialog(false)\n              }}\n            />\n          ) : null}\n        </div>\n      ) : null}\n    </BaseCard>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { observer } from 'mobx-react'\nimport { Divider, Paper } from '@mui/material'\nimport { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { parseBreakend } from '@gmod/vcf'\n\n// locals\nimport VariantSampleGrid from './VariantSampleGrid'\nimport VariantCsqPanel from './VariantCsqPanel'\nimport VariantAnnPanel from './VariantAnnPanel'\nimport BreakendPanel from './BreakendPanel'\n\nfunction VariantFeatureDetails(props: any) {\n  const { model } = props\n  const { featureData, descriptions } = model\n  const feat = JSON.parse(JSON.stringify(featureData))\n  const { samples, ...rest } = feat\n  const basicDescriptions = {\n    CHROM: 'chromosome: An identifier from the reference genome',\n    POS: 'position: The reference position, with the 1st base having position 1',\n    ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n    REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n    ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n    QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n    FILTER:\n      'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n  }\n\n  return (\n    <Paper data-testid=\"variant-side-drawer\">\n      <FeatureDetails\n        feature={rest}\n        descriptions={{ ...basicDescriptions, ...descriptions }}\n        {...props}\n      />\n      <Divider />\n      <VariantCsqPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      <VariantAnnPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      {feat.type === 'breakend' ? (\n        <BreakendPanel\n          feature={feat}\n          locStrings={feat.ALT.map(\n            (alt: string) => parseBreakend(alt)?.MatePosition || '',\n          )}\n          model={model}\n        />\n      ) : null}\n      {feat.type === 'translocation' ? (\n        <BreakendPanel\n          feature={feat}\n          model={model}\n          locStrings={[`${feat.INFO.CHR2[0]}:${feat.INFO.END}`]}\n        />\n      ) : null}\n      <VariantSampleGrid\n        feature={feat}\n        {...props}\n        descriptions={descriptions}\n      />\n    </Paper>\n  )\n}\n\nexport default observer(VariantFeatureDetails)\n"],"names":["useStyles","makeStyles","theme","resizeBar","background","palette","action","disabledBackground","height","position","overflow","tick","pointerEvents","disabled","width","hiddenTick","useResizeBar","ref","useRef","_useState","useState","_useState2","_slicedToArray","scrollLeft","setScrollLeft","useEffect","timer","setInterval","_ref$current","elt","current","querySelector","clearInterval","Tick","_ref","left","idx","onDrag","classes","cb","useCallback","d","_jsxs","_Fragment","children","_jsx","ResizeHandle","vertical","className","style","ResizeBar","_ref2","widths","setWidths","checkbox","_ref2$scrollLeft","offsets","init","i","length","distance","newWidths","_toConsumableArray","Math","max","map","SampleFilters","columns","filter","setFilter","Typography","field","TextField","placeholder","concat","value","onChange","event","_objectSpread","_defineProperty","target","VariantSamples","props","_preFilteredRows$","error","feature","_props$descriptions","descriptions","_useResizeBar","samples","preFilteredRows","Object","entries","rows","filters","keys","row","fromEntries","e","sample","id","every","key","currFilter","match","RegExp","_useState3","_useState4","checked","setChecked","_useState5","measureGridWidth","r","_useState6","index","_descriptions$FORMAT","_descriptions$FORMAT$","description","FORMAT","Description","BaseCard","title","color","FormControlLabel","control","Checkbox","label","variant","DataGrid","hideFooter","disableRowSelectionOnClick","rowHeight","columnHeaderHeight","disableColumnMenu","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","VariantAnnotPanel","min","VariantCsqPanel","_descriptions$INFO","_descriptions$INFO$CS","_descriptions$INFO$CS2","_descriptions$INFO$CS3","csqFields","INFO","CSQ","split","csq","c","AnnotGrid","VariantAnnPanel","_descriptions$INFO$AN","_descriptions$INFO$AN2","_descriptions$INFO$AN3","annFields","ANN","ann","block","display","observer","model","handleClose","viewType","copyTracks","setCopyTracks","mirrorTracks","setMirrorTracks","Dialog","open","onClose","DialogContent","DialogActions","Button","onClick","view","session","getSession","remapIds","arr","v","trackId","random","viewSnapshot","snapshotFromBreakendFeature","views","offsetPx","featureData","viewTracks","getSnapshot","tracks","reverse","addView","console","notify","autoFocus","BreakendPanel","locStrings","pluginManager","getEnv","breakpointDialog","setBreakpointDialog","getViewType","simpleFeature","SimpleFeature","locString","Link","href","preventDefault","Error","_view$navToLocString","navToLocString","call","JSON","stringify","refName","start","BreakendOptionDialog","feat","parse","rest","_objectWithoutProperties","_excluded","Paper","FeatureDetails","CHROM","POS","ID","REF","ALT","QUAL","FILTER","Divider","type","alt","_parseBreakend","parseBreakend","MatePosition","CHR2","END","VariantSampleGrid"],"sourceRoot":""}