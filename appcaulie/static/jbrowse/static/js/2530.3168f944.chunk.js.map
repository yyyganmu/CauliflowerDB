{"version":3,"file":"static/js/2530.3168f944.chunk.js","mappings":"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","sources":["../../../plugins/gff3/src/Gff3Adapter/Gff3Adapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport IntervalTree from '@flatten-js/interval-tree'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { unzip } from '@gmod/bgzf-filehandle'\n\nimport gff, { GFF3FeatureLineWithRefs } from '@gmod/gff'\n\nfunction isGzip(buf: Buffer) {\n  return buf[0] === 31 && buf[1] === 139 && buf[2] === 8\n}\n\nexport default class extends BaseFeatureDataAdapter {\n  protected gffFeatures?: Promise<{\n    header: string\n    intervalTree: Record<string, IntervalTree>\n  }>\n\n  private async loadDataP() {\n    const pm = this.pluginManager\n    const buf = await openLocation(this.getConf('gffLocation'), pm).readFile()\n    const buffer = isGzip(buf) ? await unzip(buf) : buf\n    // 512MB  max chrome string length is 512MB\n    if (buffer.length > 536_870_888) {\n      throw new Error('Data exceeds maximum string length (512MB)')\n    }\n    const data = new TextDecoder('utf8', { fatal: true }).decode(buffer)\n    const lines = data.split(/\\n|\\r\\n|\\r/)\n    const headerLines = []\n    for (let i = 0; i < lines.length && lines[i].startsWith('#'); i++) {\n      headerLines.push(lines[i])\n    }\n    const header = headerLines.join('\\n')\n\n    const feats = gff.parseStringSync(data, {\n      parseFeatures: true,\n      parseComments: false,\n      parseDirectives: false,\n      parseSequences: false,\n      disableDerivesFromReferences: true,\n    })\n\n    const intervalTree = {} as Record<string, IntervalTree>\n    for (const obj of feats.flat().map(\n      (f, i) =>\n        new SimpleFeature({\n          data: this.featureData(f),\n          id: `${this.id}-offset-${i}`,\n        }),\n    )) {\n      const key = obj.get('refName')\n      if (!intervalTree[key]) {\n        intervalTree[key] = new IntervalTree()\n      }\n      intervalTree[key].insert([obj.get('start'), obj.get('end')], obj)\n    }\n\n    return { header, intervalTree }\n  }\n\n  private async loadData() {\n    if (!this.gffFeatures) {\n      this.gffFeatures = this.loadDataP().catch(e => {\n        this.gffFeatures = undefined\n        throw e\n      })\n    }\n\n    return this.gffFeatures\n  }\n\n  public async getRefNames(opts: BaseOptions = {}) {\n    const { intervalTree } = await this.loadData()\n    return Object.keys(intervalTree)\n  }\n\n  public async getHeader() {\n    const { header } = await this.loadData()\n    return header\n  }\n\n  public getFeatures(query: NoAssemblyRegion, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      try {\n        const { start, end, refName } = query\n        const { intervalTree } = await this.loadData()\n        intervalTree[refName]\n          ?.search([start, end])\n          .forEach(f => observer.next(f))\n        observer.complete()\n      } catch (e) {\n        observer.error(e)\n      }\n    }, opts.signal)\n  }\n\n  private featureData(data: GFF3FeatureLineWithRefs) {\n    const f: Record<string, unknown> = { ...data }\n    ;(f.start as number) -= 1 // convert to interbase\n    if (data.strand === '+') {\n      f.strand = 1\n    } else if (data.strand === '-') {\n      f.strand = -1\n    } else if (data.strand === '.') {\n      f.strand = 0\n    } else {\n      f.strand = undefined\n    }\n    f.phase = Number(data.phase)\n    f.refName = data.seq_id\n    if (data.score === null) {\n      delete f.score\n    }\n    if (data.phase === null) {\n      delete f.score\n    }\n    const defaultFields = new Set([\n      'start',\n      'end',\n      'seq_id',\n      'score',\n      'type',\n      'source',\n      'phase',\n      'strand',\n    ])\n    const dataAttributes = data.attributes || {}\n    for (const a of Object.keys(dataAttributes)) {\n      let b = a.toLowerCase()\n      if (defaultFields.has(b)) {\n        // add \"suffix\" to tag name if it already exists\n        // reproduces behavior of NCList\n        b += '2'\n      }\n      if (dataAttributes[a] !== null) {\n        let attr: string | string[] | undefined = dataAttributes[a]\n        if (Array.isArray(attr) && attr.length === 1) {\n          ;[attr] = attr\n        }\n        f[b] = attr\n      }\n    }\n    f.refName = f.seq_id\n\n    // the SimpleFeature constructor takes care of recursively inflating subfeatures\n    if (data.child_features && data.child_features.length > 0) {\n      f.subfeatures = data.child_features.flatMap(childLocs =>\n        childLocs.map(childLoc => this.featureData(childLoc)),\n      )\n    }\n\n    delete f.child_features\n    delete f.data\n    // delete f.derived_features\n    delete f.attributes\n    delete f.seq_id\n    return f\n  }\n\n  public freeResources(/* { region } */) {}\n}\n"],"names":["isGzip","buf","_default","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","gffFeatures","_createClass","key","value","_loadDataP","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pm","buffer","data","lines","headerLines","i","header","feats","intervalTree","_iterator","_step","obj","_this2","wrap","_context","prev","next","this","pluginManager","openLocation","getConf","readFile","sent","unzip","t0","Error","TextDecoder","fatal","decode","split","startsWith","push","join","gff","parseFeatures","parseComments","parseDirectives","parseSequences","disableDerivesFromReferences","_createForOfIteratorHelper","flat","map","f","SimpleFeature","featureData","id","s","n","done","get","IntervalTree","insert","err","e","abrupt","stop","_loadData","_callee2","_this3","_context2","loadDataP","catch","undefined","_getRefNames","_callee3","_yield$this$loadData","_args3","_context3","loadData","Object","keys","_getHeader","_callee4","_yield$this$loadData2","_context4","query","_this4","opts","ObservableCreate","_ref","_callee5","observer","_intervalTree$refName","start","end","refName","_yield$_this4$loadDat","_context5","search","forEach","complete","error","_x","signal","_this5","_objectSpread","strand","phase","Number","seq_id","score","defaultFields","Set","dataAttributes","attributes","_i","_Object$keys","a","b","toLowerCase","has","attr","isArray","_attr","_slicedToArray","child_features","subfeatures","flatMap","childLocs","childLoc","BaseFeatureDataAdapter"],"sourceRoot":""}